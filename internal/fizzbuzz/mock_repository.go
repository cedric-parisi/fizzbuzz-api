// Code generated by MockGen. DO NOT EDIT.
// Source: internal/fizzbuzz/repository.go

// Package fizzbuzz is a generated GoMock package.
package fizzbuzz

import (
	context "context"
	models "github.com/cedric-parisi/fizzbuzz-api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRepository is a mock of Repository interface
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// SaveFizzbuzz mocks base method
func (m *MockRepository) SaveFizzbuzz(ctx context.Context, req *models.Fizzbuzz) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveFizzbuzz", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveFizzbuzz indicates an expected call of SaveFizzbuzz
func (mr *MockRepositoryMockRecorder) SaveFizzbuzz(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveFizzbuzz", reflect.TypeOf((*MockRepository)(nil).SaveFizzbuzz), ctx, req)
}

// GetMostAskedFizzbuzz mocks base method
func (m *MockRepository) GetMostAskedFizzbuzz(ctx context.Context) (*models.Fizzbuzz, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostAskedFizzbuzz", ctx)
	ret0, _ := ret[0].(*models.Fizzbuzz)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMostAskedFizzbuzz indicates an expected call of GetMostAskedFizzbuzz
func (mr *MockRepositoryMockRecorder) GetMostAskedFizzbuzz(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostAskedFizzbuzz", reflect.TypeOf((*MockRepository)(nil).GetMostAskedFizzbuzz), ctx)
}
