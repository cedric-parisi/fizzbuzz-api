// Code generated by MockGen. DO NOT EDIT.
// Source: internal/fizzbuzz/service.go

// Package fizzbuzz is a generated GoMock package.
package fizzbuzz

import (
	context "context"
	models "github.com/cedric-parisi/fizzbuzz-api/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockService is a mock of Service interface
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetFizzbuzz mocks base method
func (m *MockService) GetFizzbuzz(ctx context.Context, req *models.Fizzbuzz) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFizzbuzz", ctx, req)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFizzbuzz indicates an expected call of GetFizzbuzz
func (mr *MockServiceMockRecorder) GetFizzbuzz(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFizzbuzz", reflect.TypeOf((*MockService)(nil).GetFizzbuzz), ctx, req)
}

// GetMostAskedFizzbuzz mocks base method
func (m *MockService) GetMostAskedFizzbuzz(ctx context.Context) (*models.Fizzbuzz, int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMostAskedFizzbuzz", ctx)
	ret0, _ := ret[0].(*models.Fizzbuzz)
	ret1, _ := ret[1].(int)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// GetMostAskedFizzbuzz indicates an expected call of GetMostAskedFizzbuzz
func (mr *MockServiceMockRecorder) GetMostAskedFizzbuzz(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMostAskedFizzbuzz", reflect.TypeOf((*MockService)(nil).GetMostAskedFizzbuzz), ctx)
}
